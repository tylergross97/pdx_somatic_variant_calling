name: nf-core linting
# This workflow is triggered on pushes and PRs to the repository.
# It runs the `nf-core lint` and markdown lint tests to ensure
# that the code meets the nf-core guidelines.
on:
  push:
    branches:
      - dev
      - main
      - hama_filtering
  pull_request:
  release:
    types: [published]

jobs:
  #pre-commit:
    #runs-on: ubuntu-latest
    #steps:
    #  - uses: actions/checkout@v4
    #  - uses: actions/setup-python@v4
    #    with:
    #      python-version: "3.11"
    #  - uses: pre-commit/action@v3.0.0
        # FIXME Flip this on once we get to less than a couple hundred. Adding
        # this so that new code doesn't introduce new violations
    #    with:
     #     extra_args: --all-files

  nf-core:
    runs-on: ubuntu-latest
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v4

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nf-core

      - name: Run nf-core lint
        env:
          GITHUB_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PR_COMMIT: ${{ github.event.pull_request.head.sha }}
        run: nf-core -l lint_log.txt lint --dir ${GITHUB_WORKSPACE} --markdown lint_results.md

      - name: Save PR number
        if: ${{ always() }}
        run: echo ${{ github.event.number }} > PR_number.txt

      - name: Upload linting log file artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: linting-logs
          path: |
            lint_log.txt
            lint_results.md
            PR_number.txt
